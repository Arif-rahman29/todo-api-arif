name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test-sonar:
    name: Lint, Test & SonarCloud
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest flake8

      - name: Run flake8 lint
        run: flake8 app tests --exit-zero

      - name: Run unit tests
        run: PYTHONPATH=. pytest

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        with:
          projectBaseDir: .
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: https://sonarcloud.io
          SONAR_ORGANIZATION: ${{ secrets.SONAR_ORGANIZATION }}

  build-and-deploy:
    name: Build Docker Image & Deploy to GKE
    needs: build-test-sonar
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Google Cloud SDK
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v1
          
      - name: Configure Docker for GCP
        run: gcloud auth configure-docker

      - name: Build and Push Docker Image
        run: |
          docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/fastapi:$GITHUB_SHA .
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/fastapi:$GITHUB_SHA

      - name: Get GKE credentials
        run: |
          gcloud container clusters get-credentials ${{ secrets.GKE_CLUSTER_NAME }} --zone ${{ secrets.GKE_ZONE }}

      - name: Apply Kubernetes Deployment
        run: |
          kubectl apply -f deployment.yaml

      - name: Update Deployment Image
        run: |
          kubectl set image deployment/fastapi-deployment fastapi=gcr.io/${{ secrets.GCP_PROJECT_ID }}/fastapi:$GITHUB_SHA
