name: CI/CD Pipeline

on:
  push:
    branches: [ main ]

jobs:
  lint-test-sonarqube:
    name: Lint, Test & SonarQube
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8 pytest

      - name: Run flake8 lint
        run: flake8 app tests --exit-zero

      - name: Run unit tests
        run: PYTHONPATH=. pytest --disable-warnings --maxfail=1

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        with:
          projectBaseDir: .
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: https://sonarcloud.io
          SONAR_ORGANIZATION: ${{ secrets.SONAR_ORGANIZATION }}

  build-and-push:
    name: Build & Push Docker Image to GCR
    needs: lint-test-sonarqube
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Google Cloud authentication
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up gcloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Configure Docker to use gcloud
        run: gcloud auth configure-docker

      - name: Build and Push Docker Image
        run: |
          IMAGE="gcr.io/${{ secrets.GCP_PROJECT_ID }}/fastapi:${{ github.sha }}"
          docker build -t $IMAGE .
          docker push $IMAGE
          echo "IMAGE=$IMAGE" >> $GITHUB_ENV

  deploy-to-gke:
    name: Deploy to GKE
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Google Cloud authentication
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v1

      - name: Get GKE credentials
        run: |
          gcloud container clusters get-credentials ${{ secrets.GKE_CLUSTER_NAME }} --zone ${{ secrets.GKE_ZONE }} --project ${{ secrets.GCP_PROJECT_ID }}

      - name: Replace image tag
        run: |
          sed "s|__IMAGE_TAG__|$GITHUB_SHA|g" k8s/deployment.yaml > k8s/deployment.generated.yaml
          
      - name: Apply Deployment
        run: kubectl apply -f k8s/deployment.generated.yaml --validate=false
        env:
          USE_GKE_GCLOUD_AUTH_PLUGIN: "False"